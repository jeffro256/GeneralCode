package jeffrey_ryan.mle.states;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;

import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ActionMap;
import javax.swing.KeyStroke;

import jeffrey_ryan.mle.misc.MenuOption;

public class TitleState extends MenuState {
	public String title;
	public MenuOption[] options;
	
	public Font titleFont;
	public Font optionFont;
	
	public Color titleColor;
	public Color optionColor;
	public Color selectColor;
	
	private int selectedOption = 0;
	
	public TitleState(String title, MenuOption[] options) {
		this.title = title;
		this.options = options;

		titleFont = new Font("Times New Roman", Font.PLAIN, 50);
		optionFont = new Font("Arial", Font.PLAIN, 35);
		
		titleColor = Color.BLACK;
		optionColor = Color.BLACK;
		selectColor = Color.RED;
	}
	
	public TitleState() {
		this("Untitled", null);
	}
	
	@Override
	public void render(Graphics2D g, float interpolation) {
		super.render(g, interpolation);

		Dimension canvasSize = gsm.getPanel().getCanvasSize();
		
		g.setFont(titleFont);
		g.setColor(titleColor);
		int strLen = (int) g.getFontMetrics().getStringBounds(title, g).getWidth();
		g.drawString(title, canvasSize.width / 2 - strLen / 2, canvasSize.height / 5);

		for (int i = 0; i < options.length; i++) {
			g.setColor(i == selectedOption ? selectColor : optionColor);
			strLen = (int) g.getFontMetrics().getStringBounds(options[i].name, g).getWidth();
			g.drawString(options[i].name, canvasSize.width / 2 - strLen / 2, canvasSize.height / 2 + (optionFont.getSize() + 30) * i);
		}
	}
	
	@Override
	public void enter() {
		super.enter();
		
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_UP, 0), "Select Up");
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_DOWN, 0), "Select Down");
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "Select");
	}

	private void fixSelectedOption() {
		if (selectedOption < 0) selectedOption = options.length - 1;
		else if (selectedOption >= options.length) selectedOption = 0;
	}
}
